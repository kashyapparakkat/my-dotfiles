map gn fasd
map S shell bash -c "cd /bin/usr;bash;echo;ls"
map S shell bash -c "cd %d;bash"
map s shell bash
map S  console shell -w bash%space

map od shell bash -c "~/my-scripts/open_explorer.sh \"%p\""
map os shell bash -c "~/my-scripts/sublime_text.sh \"$(~/my-scripts/convert_path_to_windows.sh \"%:p\"\")"
map oe shell bash -c "~/my-scripts/sublime_text.sh  \"%:p\""
map ff console find%space
map fj console scout -slpit%space
map fa fzf_select
map fc fzfcd
map fs fzfsearch

# " move to a directory (prompt)
map gp console -p15 shell mkdir -p ; mv %%s $_

# " move to a bin folder for safe deletion"
# "https://github.com/ranger/ranger/issues/543 has a python implementation
map gm console -p15 shell mkdir -p /cygdrive/c/mybin ; mv %%s $_
map gs console shell bash -c "swap_filenames %s"

# map <C-s>k eval fm.move(up=9)
# map <C-s>k eval fm.move(up=9)
map <C-k> eval fm.move(up=9)
map <C-j> eval fm.move(down=9)
map <A-j> eval fm.move(down=4)
map <A-k> eval fm.move(up=4)
#map f console -p35 shell bash -c "advgrep.sh rhere ahk %%s;bash"

map A eval fm.open_console('shell advgrep.sh rhere ' + os.path.splitext(fm.thisfile.relative_path)[1][1:] + ' ')
map A eval fm.open_console('shell advgrep.sh rhere ' + os.path.splitext(fm.thisfile.relative_path)[1][1:] + ' |vim -',prompt="Enter search command: ",position=24+len(os.path.splitext(fm.thisfile.relative_path)[1][1:]))
set colorscheme jungle
# title bar
set update_title true
set sort_directories_first false

# Automatically count files in the directory, even before entering them?
set automatically_count_files false

set shorten_title 19
#Trim the title of the window if it gets long?  The number defines
#how many directories are displayed at once, False turns off this
#feature.

#map gd cd /cygdrive/c/Users/"$USERNAME"/Downloads
#map gd eval fm.cd(ranger.RANGERDIR)
map gdh eval import getpass; fm.cd('/cygdrive/c/Users/' + getpass.getuser())
map gdd eval import getpass; fm.cd('/cygdrive/c/Users/' + getpass.getuser()+'/Downloads')
map gdp eval import getpass; fm.cd('/cygdrive/c/Users/' + getpass.getuser()+'/Downloads/Projects')
map gde eval import getpass; fm.cd('/cygdrive/c/cygwin64/home/' + getpass.getuser())


set preview_max_size 1000000
# for windows
set open_all_images false

map .     move_parent 1
map ,     move_parent -1
# Disable displaying line numbers in main column
set line_numbers true

# Save tabs on exit
set save_tabs_on_exit true

# Enable scroll wrapping - moving down while on the last item will wrap around to
# the top and vice versa.
set wrap_scroll true

map gl  move to=-1
#nautilus .

map <C-o>        tab_move -1
map <C-l>        tab_move 1
map e        tab_move 1
map gT        tab_move -1
map gn        tab_new ~
map gc        tab_close

# ===================================================================
# == Pager Keybindings
# ===================================================================

# Movement

pmap j pager_move  down=2
pmap k pager_move  up=2
pmap h pager_close
pmap E edit_file
pmap n chain pager_close;move down=1;display_file
pmap e chain pager_close;move_parent 1;display_file;
pmap , chain pager_close;move_parent 1;display_file;
pmap r chain pager_close;move_parent -1;display_file;
pmap . chain pager_close;move_parent -1;display_file;
pmap l chain pager_close;move up=1;display_file
pmap <C-l>  chain pager_close; tab_move 1
pmap p chain pager_close;move up=1;display_file



#If set to 'true', persistent filters would be cleared upon leaving the directory
set clear_filters_on_dir_change true


# ===================================================================
# == Local Options
# ===================================================================
# You can set local options that only affect a single directory.

# Examples:
# setlocal path='/cygdrive/c/Users/' + getpass.getuser()+'/Downloads' sort mtime
setlocal path=/cygdrive/c/Users/cibin/Downloads sort mtime
setlocal path=/cygdrive/c/Users/212576716/Downloads sort mtime

# TODO try devicons
#default_linemode devicons
